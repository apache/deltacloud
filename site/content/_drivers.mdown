# Deltacloud Drivers

Deltacloud provides drivers for a [growing number](drivers.html#providers) of popular
IaaS cloud providers. This page contains notes pertinent to specific cloud provider drivers, such
as the [credentials](drivers.html#credentials) that should be used for a given cloud provider.
Furthermore the information here outlines the mechanism through which any API call sent by a
given client to a Deltacloud server instance may be routed to a specific driver, regardless
of the 'default' driver that the Deltacloud server was invoked for.

------------------------------------------------

## Dynamic driver switching

When the Deltacloud server is started it is passed a parameter
that specifies the **default** driver to be used for API operations:

    $ deltacloudd -i ec2

The above for example starts the Detlacloud server with the Amazon EC2 driver. Whilst
it is possible to start a number of Deltacloud server instances for each cloud provider
that you wish to connect to (e.g., on different ports), a mechanism is provided with which
to instruct the server to use a specific driver, regardless of the current default. The
Deltacloud API **drivers** colletion (e.g. GET /api/drivers) provides a list of all currently
supported cloud provider drivers.

Some drivers also support the notion of a *provider*. Changing the provider
makes it possible to use the same driver against different instances of a
cloud, for example different regions in EC2 or different installations of
RHEV-M. The possible range of values for the provider is driver-specific,
and listed in the notes for each driver below.

The driver and provider can be selected in one of two ways:

1. Through the request headers `X-Deltacloud-Driver` and
   `X-Deltacloud-Provider`. For example, including the headers
   `X-Deltacloud-Driver: ec2` and `X-Deltacloud-Provider: eu-west-1`
   ensures that a request will be serviced by the EC2 driver, and that the
   driver will use the eu-west-1 region in EC2.
2. Through the matrix request parameters `driver` and `provider` in the
   `api` component of the server's URL. For example, requesting
   `http://localhost:3001/api;driver=ec2;provider=eu-west-1` has the same
   effect as using the two request headers in the example above.

------------------------------------------------

## Driver functionality and Credentials
<table providers></table>
<a name=providers>.



------------------------------------------------

<a name=specific_driver_notes> .

## Notes on specific drivers

### EC2 Driver

The providers for the EC2 driver correspond to AWS's regions, and currently
are `us-east-1`, `us-east-1`, `eu-west-1`, `ap-southeast-1`.

------------------------------------------------

### Eucalyptus Driver

The Eucalyptus driver is based on the EC2 driver.

The driver allows selecting the Eucalyptus installation by setting a
provider in the format

    ec2=IP[:PORT];s3=IP[:PORT]

For example, for the Eucalyptus installation at `192.168.1.1:8773` and a
Walrus installation at `192.168.1.2:8773`, the driver can be pointed at
that installation by passing the request headers

    X-Deltacloud-Driver: eucalyptus
    X-Deltacloud-Provider: ec2=192.168.1.1:8773;s3=192.168.1.2:8773

------------------------------------------------

### RHEV-M Driver

The RHEV-M driver needs to be installed on a Windows machine which has the
RHEV-M Powershell API installed and configured. Assuming the directory
structure above is followed, you should copy the file
deltacloud/deltacloud-driver-rhevm/config/rhevm_config.yaml.EXAMPLE to be
rhevm_config.yaml and edit the file woith the domain you are logging into.
The username and pasword is provided via the API.

The actual RHEVM instance you are connecting to is controlled by
the RHEVM.dll.config file which is referenced from the profile.ps1
file located in My Documents/WindowsPowershell directory

------------------------------------------------

### Rackspace Driver

When using the Rackspace-cloud driver (Rackspace cloud used to be called
"Mosso") - the password in a HTTP 401 challenge should be your API key, NOT
your rackspace account password.  You can get the API-key, or generate a
new one, from the rackspace console.

------------------------------------------------

### RimuHosting

Further details coming soon.

------------------------------------------------

### OpenNebula

When using the [OpenNebula](http://www.opennebula.org/) driver, the
credentials passed in response to the HTTP 401 authentication challenge
should be your OpenNebula user and password.

The address, on which the OCCI server is listening, needs to be defined in
an environment variable called OCCI_URL.

------------------------------------------------

### IBM Smartcloud Driver

When using the IBM SmartCloud driver, the credentials passed in response to
the HTTP 401 authentication challenge should be your IBM SmartCloud
username and password.
